version: '2.2'
services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:${VERSION}
    container_name: es01-${NODE}
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02
      - cluster.initial_master_nodes=es01,es02
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - ELASTIC_PASSWORD=${PASSWD}
      - network.host=es01
      - xpack.security.enabled=true
      - xpack.license.self_generated.type=basic      
      - xpack.monitoring.collection.enabled=true
      #ssl
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.verification_mode=certificate
      - xpack.security.http.ssl.key=${ES_CERTS}/es01/es01.key
      - xpack.security.http.ssl.certificate_authorities=${ES_CERTS}/ca/ca.crt
      - xpack.security.http.ssl.certificate=${ES_CERTS}/es01/es01.crt
      #transport
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate 
      - xpack.security.transport.ssl.certificate_authorities=${ES_CERTS}/ca/ca.crt
      - xpack.security.transport.ssl.certificate=${ES_CERTS}/es01/es01.crt
      - xpack.security.transport.ssl.key=${ES_CERTS}/es01/es01.key
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data1:/usr/share/elasticsearch/data
      - certs:${ES_CERTS}
    ports:
      - 9200:9200
    networks:
      - elastic
    restart: unless-stopped

  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:${VERSION}
    container_name: es02-${NODE}
    environment:
      - node.name=es02
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01
      - cluster.initial_master_nodes=es01,es02
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - ELASTIC_PASSWORD=${PASSWD}
      - network.host=es02
      - xpack.security.enabled=true
      - xpack.license.self_generated.type=basic
      - xpack.monitoring.collection.enabled=true
      #ssl
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.verification_mode=certificate
      - xpack.security.http.ssl.key=${ES_CERTS}/es02/es02.key
      - xpack.security.http.ssl.certificate_authorities=${ES_CERTS}/ca/ca.crt
      - xpack.security.http.ssl.certificate=${ES_CERTS}/es02/es02.crt
      #transport
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate 
      - xpack.security.transport.ssl.certificate_authorities=${ES_CERTS}/ca/ca.crt
      - xpack.security.transport.ssl.certificate=${ES_CERTS}/es02/es02.crt
      - xpack.security.transport.ssl.key=${ES_CERTS}/es02/es02.key
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data2:/usr/share/elasticsearch/data
      - certs:${ES_CERTS}
    ports:
      - 9210:9200
    networks:
      - elastic
    restart: unless-stopped

  kib01:
    image: docker.elastic.co/kibana/kibana:${VERSION}
    container_name: kib01-${NODE}
    depends_on:
      - es01
      - es02
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_URL=https://es01:9200
      - ELASTICSEARCH_HOSTS=https://es01:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=${PASSWD}
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=${KIB_CERTS}/ca/ca.crt
      - ELASTICSEARCH_SSL_VERIFICATIONMODE=certificate
      - XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY=${ENCRYPTIONKEY} 
      - SERVER_SSL_ENABLED=true
      - SERVER_SSL_KEY=${KIB_CERTS}/kib01/kib01.key
      - SERVER_SSL_CERTIFICATE=${KIB_CERTS}/kib01/kib01.crt
    volumes:
      - certs:${KIB_CERTS}
    networks:
      - elastic
    restart: unless-stopped

  log01:
    image: docker.elastic.co/logstash/logstash:${VERSION}
    container_name: log01-${NODE}
    depends_on:
      - es01
      - es02
    ports:
      - 5044:5044
    environment:
      LS_JAVA_OPTS: -Xmx512m -Xms512m
    volumes:
      - $PWD/log01/pipeline/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
      - certs:/usr/share/logstash/config/certificates:ro
    networks:
      - elastic
    restart: unless-stopped

  cerebro:
    image: lmenezes/cerebro:latest
    container_name: cerebro-${NODE}
    environment:
      - AUTH_TYPE=basic
      - BASIC_AUTH_USER=cerebro
      - BASIC_AUTH_PWD=cerebro
      - ES_HOST=https://es01:9200
      - CLUSTER=Docker-Cluster
      - CA_PATH=/opt/cerebro/conf/cert/ca/ca.crt
    ports:
      - 9000:9000
    volumes:
      - $PWD/cerebro/application.conf:/opt/cerebro/conf/application.conf
      - certs:/opt/cerebro/conf/cert:ro
    networks:
      - elastic

volumes:
  certs:
    driver: local
    driver_opts:
      type: volume
      o: bind
      device: "$PWD/certs/"
  data1:
    driver: local
    driver_opts:
      type: volume
      o: bind
      device: "$PWD/data1-ES"
  data2:
    driver: local
    driver_opts:
      type: volume
      o: bind
      device: "$PWD/data2-ES/"

networks:
  elastic:
    driver: bridge
